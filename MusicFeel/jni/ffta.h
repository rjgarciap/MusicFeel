/*				  TRIGTBL.H				*/
/*   ** FFT and FHT routines <=> Copyright 1988, 1993; Ron Mayer. */

/* Macros y tablas usadas por las funciones que calculan la FFT. */

#ifndef TRIGTBL_H
#define TRIGTBL_H 1

#define  SQRT2            1.4142135    /* raiz cuadrada de 2 */ 

#define FHT_SWAP(a,b,t) {(t)=(a);(a)=(b);(b)=(t);}
#define TRIG_VARS					         \
      int t_lam=0;
#define TRIG_INIT(k,c,s)					 \
     {								 \
      int i;							 \
      for (i=2 ; i<=k ; i++)					 \
	  {coswrk[i]=costab[i];sinwrk[i]=sintab[i];}		 \
      t_lam = 0;					         \
      c = 1;							 \
      s = 0;							 \
     }
#define TRIG_NEXT(k,c,s)					 \
     {								 \
	 int i,j;	                                         \
	 (t_lam)++;	  					 \
	 for (i=0 ; !((1<<i)&t_lam) ; i++);			 \
	 i = k-i;						 \
	 s = sinwrk[i];						 \
	 c = coswrk[i];						 \
	 if (i>1)   						 \
	    {	    						 \
	     for (j=k-i+2 ; (1<<j)&t_lam ; j++);		 \
	     j	       = k - j;					 \
	     sinwrk[i] = halsec[i] * (sinwrk[i-1] + sinwrk[j]);  \
	     coswrk[i] = halsec[i] * (coswrk[i-1] + coswrk[j]);  \
	    }                                                    \
     }
#define TRIG_RESET(k,c,s)

static float halsec[20]=
    {
     0,
     0,
     .54119610014619698439972320536638942006107206337801,
     .50979557910415916894193980398784391368261849190893,
     .50241928618815570551167011928012092247859337193963,
     .50060299823519630134550410676638239611758632599591,
     .50015063602065098821477101271097658495974913010340,
     .50003765191554772296778139077905492847503165398345,
     .50000941253588775676512870469186533538523133757983,
     .50000235310628608051401267171204408939326297376426,
     .50000058827484117879868526730916804925780637276181,
     .50000014706860214875463798283871198206179118093251,
     .50000003676714377807315864400643020315103490883972,
     .50000000919178552207366560348853455333939112569380,
     .50000000229794635411562887767906868558991922348920,
     .50000000057448658687873302235147272458812263401372
    };

static float costab[20]=
    {
     .00000000000000000000000000000000000000000000000000,
     .70710678118654752440084436210484903928483593768847,
     .92387953251128675612818318939678828682241662586364,
     .98078528040323044912618223613423903697393373089333,
     .99518472667219688624483695310947992157547486872985,
     .99879545620517239271477160475910069444320361470461,
     .99969881869620422011576564966617219685006108125772,
     .99992470183914454092164649119638322435060646880221,
     .99998117528260114265699043772856771617391725094433,
     .99999529380957617151158012570011989955298763362218,
     .99999882345170190992902571017152601904826792288976,
     .99999970586288221916022821773876567711626389934930,
     .99999992646571785114473148070738785694820115568892,
     .99999998161642929380834691540290971450507605124278,
     .99999999540410731289097193313960614895889430318945,
     .99999999885102682756267330779455410840053741619428
    };

static float sintab[20]=
    {
     1.0000000000000000000000000000000000000000000000000,
     .70710678118654752440084436210484903928483593768846,
     .38268343236508977172845998403039886676134456248561,
     .19509032201612826784828486847702224092769161775195,
     .09801714032956060199419556388864184586113667316749,
     .04906767432741801425495497694268265831474536302574,
     .02454122852291228803173452945928292506546611923944,
     .01227153828571992607940826195100321214037231959176,
     .00613588464915447535964023459037258091705788631738,
     .00306795676296597627014536549091984251894461021344,
     .00153398018628476561230369715026407907995486457522,
     .00076699031874270452693856835794857664314091945205,
     .00038349518757139558907246168118138126339502603495,
     .00019174759731070330743990956198900093346887403385,
     .00009587379909597734587051721097647635118706561284,
     .00004793689960306688454900399049465887274686668768
    };
static float coswrk[20]=
    {
     .00000000000000000000000000000000000000000000000000,
     .70710678118654752440084436210484903928483593768847,
     .92387953251128675612818318939678828682241662586364,
     .98078528040323044912618223613423903697393373089333,
     .99518472667219688624483695310947992157547486872985,
     .99879545620517239271477160475910069444320361470461,
     .99969881869620422011576564966617219685006108125772,
     .99992470183914454092164649119638322435060646880221,
     .99998117528260114265699043772856771617391725094433,
     .99999529380957617151158012570011989955298763362218,
     .99999882345170190992902571017152601904826792288976,
     .99999970586288221916022821773876567711626389934930,
     .99999992646571785114473148070738785694820115568892,
     .99999998161642929380834691540290971450507605124278,
     .99999999540410731289097193313960614895889430318945,
     .99999999885102682756267330779455410840053741619428
    };
static float sinwrk[20]=
    {
     1.0000000000000000000000000000000000000000000000000,
     .70710678118654752440084436210484903928483593768846,
     .38268343236508977172845998403039886676134456248561,
     .19509032201612826784828486847702224092769161775195,
     .09801714032956060199419556388864184586113667316749,
     .04906767432741801425495497694268265831474536302574,
     .02454122852291228803173452945928292506546611923944,
     .01227153828571992607940826195100321214037231959176,
     .00613588464915447535964023459037258091705788631738,
     .00306795676296597627014536549091984251894461021344,
     .00153398018628476561230369715026407907995486457522,
     .00076699031874270452693856835794857664314091945205,
     .00038349518757139558907246168118138126339502603495,
     .00019174759731070330743990956198900093346887403385,
     .00009587379909597734587051721097647635118706561284,
     .00004793689960306688454900399049465887274686668768
    };

static int puntos[240] = {
  16,    8,  32,    4,  40,   20,  48,   12,  52,   44,  56,   28,
  64,    2,  68,   34,  72,   18,  76,   50,  80,   10,  82,   74,
  84,   42,  88,   26,  92,   58,  96,    6,  98,   70, 100,   38,
 104,   22, 106,   86, 108,   54, 112,   14, 114,   78, 116,   46,
 118,  110, 120,   30, 122,   94, 124,   62, 128,    1, 130,   65,
 132,   33, 134,   97, 136,   17, 138,   81, 140,   49, 142,  113,
 144,    9, 145,  137, 146,   73, 148,   41, 150,  105, 152,   25,
 154,   89, 156,   57, 158,  121, 160,    5, 161,  133, 162,   69,
 164,   37, 166,  101, 168,   21, 169,  149, 170,   85, 172,   53,
 174,  117, 176,   13, 177,  141, 178,   77, 180,   45, 181,  173,
 182,  109, 184,   29, 185,  157, 186,   93, 188,   61, 190,  125,
 192,    3, 193,  131, 194,   67, 196,   35, 197,  163, 198,   99,
 200,   19, 201,  147, 202,   83, 204,   51, 205,  179, 206,  115,
 208,   11, 209,  139, 210,   75, 211,  203, 212,   43, 213,  171,
 214,  107, 216,   27, 217,  155, 218,   91, 220,   59, 221,  187,
 222,  123, 224,    7, 225,  135, 226,   71, 227,  199, 228,   39,
 229,  167, 230,  103, 232,   23, 233,  151, 234,   87, 235,  215,
 236,   55, 237,  183, 238,  119, 240,   15, 241,  143, 242,   79,
 243,  207, 244,   47, 245,  175, 246,  111, 247,  239, 248,   31,
 249,  159, 250,   95, 251,  223, 252,   63, 253,  191, 254,  127
};

#endif

